<?xml version="1.0" encoding="utf-8"?>
<testsuite errors="0" failures="12" name="pytest" skipped="0" tests="15" time="1.387">
    <testcase classname="h_test.dier.test_case1.tui" file="h_test\dier\test_case1.py" line="17" name="test_case1"
              time="0.002">
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.dier.test_case1.tui" file="h_test\dier\test_case1.py" line="20" name="test_case2"
              time="0.003">
        <failure message="AssertionError: 10 != 5 : you input is not 5">self = &lt;unit_practice.h_test.dier.test_case1.tui
            testMethod=test_case2&gt;

            def test_case2(self):
            &gt; self.assertEqual(self.number, 5, msg=&apos;you input is not 5&apos;)
            E AssertionError: 10 != 5 : you input is not 5

            ..\h_test\dier\test_case1.py:22: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.dier.test_case1.tui" file="h_test\dier\test_case1.py" line="23" name="test_case3"
              time="0.004">
        <failure message="AssertionError: 10 != 2 : you input is not 2">self = &lt;unit_practice.h_test.dier.test_case1.tui
            testMethod=test_case3&gt;

            def test_case3(self):
            &gt; self.assertEqual(self.number, 2, msg=&apos;you input is not 2&apos;)
            E AssertionError: 10 != 2 : you input is not 2

            ..\h_test\dier\test_case1.py:25: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.dier.test_case2.tui" file="h_test\dier\test_case2.py" line="17" name="test_case1"
              time="0.002">
        <failure message="AssertionError: 1 != 10 : you input is not 10">self = &lt;unit_practice.h_test.dier.test_case2.tui
            testMethod=test_case1&gt;

            def test_case1(self):
            &gt; self.assertEqual(self.number, 10, msg=&apos;you input is not 10&apos;)
            E AssertionError: 1 != 10 : you input is not 10

            ..\h_test\dier\test_case2.py:19: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.dier.test_case2.tui" file="h_test\dier\test_case2.py" line="20" name="test_case2"
              time="0.002">
        <failure message="AssertionError: 1 != 5 : you input is not 5">self = &lt;unit_practice.h_test.dier.test_case2.tui
            testMethod=test_case2&gt;

            def test_case2(self):
            &gt; self.assertEqual(self.number, 5, msg=&apos;you input is not 5&apos;)
            E AssertionError: 1 != 5 : you input is not 5

            ..\h_test\dier\test_case2.py:22: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.dier.test_case2.tui" file="h_test\dier\test_case2.py" line="23" name="test_case3"
              time="0.004">
        <failure message="AssertionError: 1 != 2 : you input is not 2">self = &lt;unit_practice.h_test.dier.test_case2.tui
            testMethod=test_case3&gt;

            def test_case3(self):
            &gt; self.assertEqual(self.number, 2, msg=&apos;you input is not 2&apos;)
            E AssertionError: 1 != 2 : you input is not 2

            ..\h_test\dier\test_case2.py:25: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case3.tui" file="h_test\diyi\test_case3.py" line="17" name="test_case1"
              time="0.004">
        <failure message="AssertionError: 2 != 10 : you input is not 10">self = &lt;unit_practice.h_test.diyi.test_case3.tui
            testMethod=test_case1&gt;

            def test_case1(self):
            &gt; self.assertEqual(self.number, 10, msg=&apos;you input is not 10&apos;)
            E AssertionError: 2 != 10 : you input is not 10

            ..\h_test\diyi\test_case3.py:19: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case3.tui" file="h_test\diyi\test_case3.py" line="20" name="test_case2"
              time="0.003">
        <failure message="AssertionError: 2 != 5 : you input is not 5">self = &lt;unit_practice.h_test.diyi.test_case3.tui
            testMethod=test_case2&gt;

            def test_case2(self):
            &gt; self.assertEqual(self.number, 5, msg=&apos;you input is not 5&apos;)
            E AssertionError: 2 != 5 : you input is not 5

            ..\h_test\diyi\test_case3.py:22: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case3.tui" file="h_test\diyi\test_case3.py" line="23" name="test_case3"
              time="0.002">
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case4.tui" file="h_test\diyi\test_case4.py" line="17" name="test_case1"
              time="0.001">
        <failure message="AssertionError: 5 != 10 : you input is not 10">self = &lt;unit_practice.h_test.diyi.test_case4.tui
            testMethod=test_case1&gt;

            def test_case1(self):
            &gt; self.assertEqual(self.number, 10, msg=&apos;you input is not 10&apos;)
            E AssertionError: 5 != 10 : you input is not 10

            ..\h_test\diyi\test_case4.py:19: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case4.tui" file="h_test\diyi\test_case4.py" line="20" name="test_case2"
              time="0.002">
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="h_test.diyi.test_case4.tui" file="h_test\diyi\test_case4.py" line="23" name="test_case3"
              time="0.002">
        <failure message="AssertionError: 5 != 2 : you input is not 2">self = &lt;unit_practice.h_test.diyi.test_case4.tui
            testMethod=test_case3&gt;

            def test_case3(self):
            &gt; self.assertEqual(self.number, 2, msg=&apos;you input is not 2&apos;)
            E AssertionError: 5 != 2 : you input is not 2

            ..\h_test\diyi\test_case4.py:25: AssertionError
        </failure>
        <system-out>开始测试
            测试结束
        </system-out>
    </testcase>
    <testcase classname="l_pytest.test_case01.Test_Case" file="l_pytest\test_case01.py" line="13" name="test_case"
              time="1.004">
        <failure message="AssertionError: 不是5
assert &apos;5&apos; == &apos;4&apos;
  - 5
  + 4">self = &lt;unit_practice.l_pytest.test_case01.Test_Case object at 0x036B93F0&gt;
            haha = &apos;5&apos;

            def test_case(self,haha):
            # print(self.a,)
            time.sleep(1)
            &gt; assert haha ==&apos;4&apos;,&apos;不是5&apos;
            E AssertionError: 不是5
            E assert &apos;5&apos; == &apos;4&apos;
            E - 5
            E + 4

            test_case01.py:17: AssertionError
        </failure>
        <system-out>开始测试
        </system-out>
    </testcase>
    <testcase classname="l_pytest.test_case01.Test_Case" file="l_pytest\test_case01.py" line="18" name="test_case2"
              time="0.001">
        <failure message="AssertionError: 不是2
assert &apos;5&apos; == &apos;2&apos;
  - 5
  + 2">self = &lt;unit_practice.l_pytest.test_case01.Test_Case object at 0x036B61B0&gt;
            haha = &apos;5&apos;

            def test_case2(self,haha):
            &gt; assert haha ==&apos;2&apos;,&apos;不是2&apos;
            E AssertionError: 不是2
            E assert &apos;5&apos; == &apos;2&apos;
            E - 5
            E + 2

            test_case01.py:20: AssertionError
        </failure>
    </testcase>
    <testcase classname="l_pytest.test_case01.Test_Case" file="l_pytest\test_case01.py" line="21" name="test_case3"
              time="0.004">
        <failure message="AssertionError: 不是1
assert &apos;2&apos; == &apos;1&apos;
  - 2
  + 1">self = &lt;unit_practice.l_pytest.test_case01.Test_Case object at 0x036AFA50&gt;

            def test_case3(self):
            &gt; assert &apos;2&apos; == &apos;1&apos;, &apos;不是1&apos;
            E AssertionError: 不是1
            E assert &apos;2&apos; == &apos;1&apos;
            E - 2
            E + 1

            test_case01.py:23: AssertionError
        </failure>
        <system-out>测试结束
        </system-out>
    </testcase>
</testsuite>